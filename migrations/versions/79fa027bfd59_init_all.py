"""init_all

Revision ID: 79fa027bfd59
Revises: 
Create Date: 2023-11-22 22:44:49.387988

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '79fa027bfd59'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('search_request',
    sa.Column('local_id', sa.Integer(), nullable=False),
    sa.Column('state', sa.Integer(), nullable=True),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.Column('query', sa.String(), nullable=True),
    sa.Column('page', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.PrimaryKeyConstraint('local_id')
    )
    op.create_table('sr_metadata',
    sa.Column('search_request_id', sa.Integer(), nullable=True),
    sa.Column('local_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('catalog_type', sa.String(), nullable=True),
    sa.Column('catalog_value', sa.String(), nullable=True),
    sa.Column('normquery', sa.String(), nullable=True),
    sa.Column('ContextMetadata', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.ForeignKeyConstraint(['search_request_id'], ['search_request.local_id'], ),
    sa.PrimaryKeyConstraint('local_id')
    )
    op.create_table('sr_params',
    sa.Column('search_request_id', sa.Integer(), nullable=True),
    sa.Column('local_id', sa.Integer(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.Column('curr', sa.String(), nullable=True),
    sa.Column('spp', sa.Integer(), nullable=True),
    sa.Column('dest', sa.Integer(), nullable=True),
    sa.Column('payloadVersion', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['search_request_id'], ['search_request.local_id'], ),
    sa.PrimaryKeyConstraint('local_id')
    )
    op.create_table('sr_product',
    sa.Column('search_request_id', sa.Integer(), nullable=True),
    sa.Column('local_id', sa.Integer(), nullable=False),
    sa.Column('time1', sa.Integer(), nullable=True),
    sa.Column('time2', sa.Integer(), nullable=True),
    sa.Column('dist', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=True),
    sa.Column('root', sa.Integer(), nullable=True),
    sa.Column('kindId', sa.Integer(), nullable=True),
    sa.Column('subjectId', sa.Integer(), nullable=True),
    sa.Column('subjectParentId', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('brand', sa.String(), nullable=True),
    sa.Column('brandId', sa.Integer(), nullable=True),
    sa.Column('siteBrandId', sa.Integer(), nullable=True),
    sa.Column('supplier', sa.String(), nullable=True),
    sa.Column('supplierId', sa.Integer(), nullable=True),
    sa.Column('sale', sa.Integer(), nullable=True),
    sa.Column('priceU', sa.Integer(), nullable=True),
    sa.Column('salePriceU', sa.Integer(), nullable=True),
    sa.Column('logisticsCost', sa.Integer(), nullable=True),
    sa.Column('saleConditions', sa.Integer(), nullable=True),
    sa.Column('returnCost', sa.Integer(), nullable=True),
    sa.Column('pics', sa.Integer(), nullable=True),
    sa.Column('rating', sa.Integer(), nullable=True),
    sa.Column('reviewRating', sa.Integer(), nullable=True),
    sa.Column('feedbacks', sa.Integer(), nullable=True),
    sa.Column('panelPromoId', sa.Integer(), nullable=True),
    sa.Column('promoTextCard', sa.String(), nullable=True),
    sa.Column('promoTextCat', sa.String(), nullable=True),
    sa.Column('volume', sa.Integer(), nullable=True),
    sa.Column('viewFlags', sa.Integer(), nullable=True),
    sa.Column('isNew', sa.Boolean(), nullable=True),
    sa.Column('diffPrice', sa.Boolean(), nullable=True),
    sa.Column('processed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['search_request_id'], ['search_request.local_id'], ),
    sa.PrimaryKeyConstraint('local_id')
    )
    op.create_table('sr_product_color',
    sa.Column('local_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['sr_product.local_id'], ),
    sa.PrimaryKeyConstraint('local_id')
    )
    op.create_table('sr_product_log',
    sa.Column('local_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('cpm', sa.Integer(), nullable=True),
    sa.Column('promotion', sa.Integer(), nullable=True),
    sa.Column('promoPosition', sa.Integer(), nullable=True),
    sa.Column('position', sa.Integer(), nullable=True),
    sa.Column('advertId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['sr_product.local_id'], ),
    sa.PrimaryKeyConstraint('local_id')
    )
    op.create_table('sr_product_size',
    sa.Column('local_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('origName', sa.String(), nullable=True),
    sa.Column('rank', sa.Integer(), nullable=True),
    sa.Column('optionId', sa.Integer(), nullable=True),
    sa.Column('returnCost', sa.Integer(), nullable=True),
    sa.Column('wh', sa.Integer(), nullable=True),
    sa.Column('sign', sa.String(), nullable=True),
    sa.Column('payload', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['sr_product.local_id'], ),
    sa.PrimaryKeyConstraint('local_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('sr_product_size')
    op.drop_table('sr_product_log')
    op.drop_table('sr_product_color')
    op.drop_table('sr_product')
    op.drop_table('sr_params')
    op.drop_table('sr_metadata')
    op.drop_table('search_request')
    # ### end Alembic commands ###
